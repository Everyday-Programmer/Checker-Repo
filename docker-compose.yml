version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    command: [
      "gunicorn",
      "api_main:app",
      "--workers", "17",
      "--worker-class", "uvicorn.workers.UvicornWorker",
      "--bind", "0.0.0.0:8080",
      "--timeout", "120",
      "--access-logfile", "-",
      "--error-logfile", "-",
      "--access-logformat", '"%(h)s - - [%(t)s] "%(r)s" %(s)s %(b)s "%(f)s" "%(a)s"'
    ]
    #ports:
      #- "8080:8000"
    volumes:
      - ./uploads:/app/uploads
      - utils-volume:/app
    depends_on:
      - mongodb
    env_file:
      - .env
    networks:
      - mynetwork
    deploy:
      replicas: 4
      resources:
        limits:
          cpus: '2'
          memory: '4G'
      update_config:
        parallelism: 2
        delay: 10s

  updater:
    build:
      context: .
      dockerfile: Dockerfile
    command: ["python", "/app/updater_main.py"]
    depends_on:
      - mongodb
    volumes:
      - ./uploads:/app/uploads
      - utils-volume:/app
    env_file:
      - .env
    networks:
      - mynetwork

  mongodb:
    image: mongo:latest
    environment:
      MONGO_INITDB_ROOT_USERNAME: iocanalyzeradmin
      MONGO_INITDB_ROOT_PASSWORD: iocanalyzerpassword
    deploy:
      resources:
        limits:
          memory: 6G
        reservations:
          memory: 2G
    ports:
      - "27017:27017"
    volumes:
      - ./mongo-data:/data/db
    networks:
      - mynetwork
    # command: [ "mongod", "--replSet", "rs0", "--bind_ip_all" ]

  nginx:
      image: nginx:latest
      ports:
        - "80:80"
      volumes:
        - ./nginx.conf:/etc/nginx/nginx.conf
      depends_on:
        - api
      networks:
        - mynetwork

volumes:
  utils-volume:

networks:
  mynetwork:
    driver: overlay
    attachable: true
